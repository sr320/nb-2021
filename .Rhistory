hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group = 1L, destrand=TRUE)
filtered.myobj=filterByCoverage(myobj_02,lo.count=2,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group = 1L, destrand=TRUE)
filtered.myobj=filterByCoverage(myobj_02,lo.count=2,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group=1L, destrand=TRUE)
filtered.myobj=filterByCoverage(myobj_02,lo.count=2,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group=4L, destrand=TRUE)
filtered.myobj=filterByCoverage(myobj_02,lo.count=2,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group=1L, destrand=TRUE)
filtered.myobj=filterByCoverage(myobj_02,lo.count=2,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group=1L, destrand=TRUE)
filtered.myobj=filterByCoverage(myobj_01,lo.count=10,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
meth_filter=unite(filtered.myobj, min.per.group=2L, destrand=TRUE)
clusterSamples(meth_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(meth_filter)
filtered.myobj=filterByCoverage(myobj_01,lo.count=10,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
meth_filter=unite(filtered.myobj, min.per.group=3L, destrand=TRUE)
clusterSamples(meth_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(meth_filter)
myobj_lowCov = methRead(cov.list,
sample.id = list("1","2","3","4","5","6","7","8"),
assembly="v081",
treatment = c(0,0,0,0,1,1,1,1),
context="CpG",
mincov = 3
)
myobj_lowCov = methRead(cov.list,
sample.id = list("1","2","3","4","5","6","7","8"),
assembly="v081",
treatment = c(0,0,0,0,1,1,1,1),
context="CpG",
mincov = 3
)
cov.list=list('../data/1_ATCACG.CpG_report.merged_CpG_evidence.cov',
'../data/2_CGATGT.CpG_report.merged_CpG_evidence.cov',
'../data/3_TTAGGC.CpG_report.merged_CpG_evidence.cov',
'../data/4_TGACCA.CpG_report.merged_CpG_evidence.cov',
'../data/5_ACAGTG.CpG_report.merged_CpG_evidence.cov',
'../data/6_GCCAAT.CpG_report.merged_CpG_evidence.cov',
'../data/7_CAGATC.CpG_report.merged_CpG_evidence.cov',
'../data/8_ACTTGA.CpG_report.merged_CpG_evidence.cov'
)
myobj_lowCov = methRead(cov.list,
sample.id = list("1","2","3","4","5","6","7","8"),
assembly="v081",
treatment = c(0,0,0,0,1,1,1,1),
context="CpG",
mincov = 3
)
myobj_lowCov = methRead(cov.list,
sample.id = list("1","2","3","4","5","6","7","8"),
assembly="v081",
treatment = c(0,0,0,0,1,1,1,1),
pipeline = "bismarkCoverage",
context="CpG",
mincov = 3
)
tiles = tileMethylCounts(myobj_lowCov,win.size=1000,step.size=1000,cov.bases = 10)
head(tiles[[1]],3)
save(tiles, file = "../analyses/tiles_01")
getMethylationStats(tiles[[3]],plot=TRUE,both.strands=FALSE)
tiles_filter=unite(tiles, min.per.group=3L, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
tiles_filter=unite(tiles, min.per.group=4L, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
tiles_filter=unite(tiles, min.per.group=4L, destrand=FALSE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
tiles_filter=unite(tiles, min.per.group=1L, destrand=FALSE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
tiles_filter=unite(tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles,lo.count=10,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
tiles_filter=unite(filtered.tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles,lo.count=20,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
tiles_filter=unite(filtered.tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles,lo.count=50,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
tiles_filter=unite(filtered.tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles,lo.count=3,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
tiles_filter=unite(filtered.tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles,lo.count=10,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
tiles_filter=unite(filtered.tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
tiles02 = tileMethylCounts(myobj_lowCov,win.size=1000,step.size=1000,cov.bases = 5)
getMethylationStats(tiles[[4]],plot=TRUE,both.strands=FALSE)
save(tiles02, file = "../analyses/tiles_02")
getMethylationStats(tiles02[[4]],plot=TRUE,both.strands=FALSE)
filtered.tiles=filterByCoverage(tiles02,lo.count=5,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
tiles_filter=unite(filtered.tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles02,lo.count=6,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
tiles_filter=unite(filtered.tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles02,lo.count=10,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
tiles_filter=unite(filtered.tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles02,lo.count=10,lo.perc=NULL,
hi.count=100,hi.perc=NULL)
tiles_filter=unite(filtered.tiles, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles02,lo.count=10,lo.perc=NULL,
hi.count=100,hi.perc=NULL)
tiles_filter=unite(filtered.tiles, min.per.group=1L, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles02,lo.count=NULL,lo.perc=NULL,
hi.count=100,hi.perc=NULL)
tiles_filter=unite(filtered.tiles, min.per.group=1L, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
filtered.tiles=filterByCoverage(tiles02,lo.count=NULL,lo.perc=NULL,
hi.count=100,hi.perc=NULL)
tiles_filter=unite(filtered.tiles, min.per.group=3L, destrand=TRUE)
clusterSamples(tiles_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(tiles_filter)
myDiff.tile=calculateDiffMeth(tiles02,mc.cores=8)
myDiff.tile=calculateDiffMeth(tiles,mc.cores=8)
getMethylationStats(myobj_01[[3]],plot=TRUE,both.strands=FALSE)
filtered.myobj=filterByCoverage(myobj_01,lo.count=10,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
library(methylKit)
filtered.myobj=filterByCoverage(myobj_01,lo.count=10,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
load("../analyses/myobj_01")
filtered.myobj=filterByCoverage(myobj_01,lo.count=10,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
meth_filter=unite(filtered.myobj, min.per.group=3L, destrand=TRUE)
clusterSamples(meth_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(meth_filter)
myDiff=calculateDiffMeth(meth_filter,mc.cores=8)
# get hyper methylated bases
myDiff25p.hyper=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hyper")
#
# get hypo methylated bases
myDiff25p.hypo=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hypo")
#
#
# get all differentially methylated bases
myDiff25p=getMethylDiff(myDiff,difference=10,qvalue=.01)
bam.list=list('/Volumes/block/wd/061421/1_ATCACG_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'/Volumes/block/wd/061421/2_CGATGT_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'/Volumes/block/wd/061421/3_TTAGGC_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'/Volumes/block/wd/061421/4_TGACCA_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'/Volumes/block/wd/061421/5_ACAGTG_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'/Volumes/block/wd/061421/6_GCCAAT_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'/Volumes/block/wd/061421/7_CAGATC_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'/Volumes/block/wd/061421/8_ACTTGA_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam'
)
library(methylKit)
getMethylationStats(myobj_01[[3]],plot=TRUE,both.strands=FALSE)
filtered.myobj=filterByCoverage(myobj_01,lo.count=10,lo.perc=NULL,
hi.count=1000,hi.perc=NULL)
meth_filter=unite(filtered.myobj, min.per.group=3L, destrand=TRUE)
clusterSamples(meth_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(meth_filter)
myDiff=calculateDiffMeth(meth_filter,mc.cores=8)
# get hyper methylated bases
myDiff25p.hyper=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hyper")
#
# get hypo methylated bases
myDiff25p.hypo=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hypo")
#
#
# get all differentially methylated bases
myDiff25p=getMethylDiff(myDiff,difference=10,qvalue=.01)
head(filtered.myobj)
getCorrelation(filtered.myobj,plot=TRUE)
cov.list=list('../data/1_ATCACG.CpG_report.merged_CpG_evidence.cov',
'../data/2_CGATGT.CpG_report.merged_CpG_evidence.cov',
'../data/3_TTAGGC.CpG_report.merged_CpG_evidence.cov',
'../data/4_TGACCA.CpG_report.merged_CpG_evidence.cov',
'../data/5_ACAGTG.CpG_report.merged_CpG_evidence.cov',
'../data/6_GCCAAT.CpG_report.merged_CpG_evidence.cov',
'../data/7_CAGATC.CpG_report.merged_CpG_evidence.cov',
'../data/8_ACTTGA.CpG_report.merged_CpG_evidence.cov'
)
load("../analyses/myobj_01")
load("../analyses/myobj_02")
getMethylationStats(myobj_02[[3]],plot=TRUE,both.strands=FALSE)
myobj_02 = methRead(location = cov.list,
sample.id = list("1","2","3","4","5","6","7","8"),
assembly = "v081",
context="CpG",
mincov=2,
pipeline = "bismarkCoverage",
treatment = c(0,0,0,0,1,1,1,1)
)
getMethylationStats(myobj_02[[3]],plot=TRUE,both.strands=FALSE)
filtered.myobj=filterByCoverage(myobj_02,lo.count=2,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group=1L, destrand=TRUE)
filtered.myobj=filterByCoverage(myobj_02,lo.count=2,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, destrand=TRUE)
filtered.myobj=filterByCoverage(myobj_02,lo.count=2,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group = 1L, destrand=TRUE)
cov.list=list('../data/1_ATCACG.CpG_report.merged_CpG_evidence.cov',
'../data/2_CGATGT.CpG_report.merged_CpG_evidence.cov',
'../data/3_TTAGGC.CpG_report.merged_CpG_evidence.cov',
'../data/4_TGACCA.CpG_report.merged_CpG_evidence.cov',
'../data/5_ACAGTG.CpG_report.merged_CpG_evidence.cov',
'../data/6_GCCAAT.CpG_report.merged_CpG_evidence.cov',
'../data/7_CAGATC.CpG_report.merged_CpG_evidence.cov',
'../data/8_ACTTGA.CpG_report.merged_CpG_evidence.cov'
)
load ("../analyses/tiles_01")
filtered.myobj=filterByCoverage(tiles,lo.count=3,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group = 1L, destrand=TRUE)
clusterSamples(meth_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(meth_filter)
filtered.myobj=filterByCoverage(tiles,lo.count=5,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group = 1L, destrand=TRUE)
clusterSamples(meth_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(meth_filter)
myDiff=calculateDiffMeth(meth_filter,mc.cores=8)
# get hyper methylated bases
myDiff25p.hyper=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hyper")
#
# get hypo methylated bases
myDiff25p.hypo=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hypo")
#
#
# get all differentially methylated bases
myDiff25p=getMethylDiff(myDiff,difference=10,qvalue=.01)
# get hyper methylated bases
myDiff25p.hyper=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hyper")
#
# get hypo methylated bases
myDiff25p.hypo=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hypo")
#
#
# get all differentially methylated bases
myDiff10p=getMethylDiff(myDiff,difference=10,qvalue=.01)
filtered.myobj=filterByCoverage(tiles,lo.count=5,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, min.per.group = 4L, destrand=TRUE)
clusterSamples(meth_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(meth_filter)
myDiff=calculateDiffMeth(meth_filter,mc.cores=8)
# get hyper methylated bases
myDiff25p.hyper=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hyper")
#
# get hypo methylated bases
myDiff25p.hypo=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hypo")
#
#
# get all differentially methylated bases
myDiff10p=getMethylDiff(myDiff,difference=10,qvalue=.01)
filtered.myobj=filterByCoverage(tiles,lo.count=5,lo.perc=NULL,
hi.count=NULL,hi.perc=99.9)
meth_filter=unite(filtered.myobj, destrand=TRUE)
clusterSamples(meth_filter, dist="correlation", method="ward", plot=TRUE)
PCASamples(meth_filter)
myDiff=calculateDiffMeth(meth_filter,mc.cores=8)
# get hyper methylated bases
myDiff25p.hyper=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hyper")
#
# get hypo methylated bases
myDiff25p.hypo=getMethylDiff(myDiff,difference=25,qvalue=0.01,type="hypo")
#
#
# get all differentially methylated bases
myDiff10p=getMethylDiff(myDiff,difference=10,qvalue=.01)
View(myDiff10p)
tiles = tileMethylCounts(myobj_lowCov,win.size=1000,step.size=1000,cov.bases = 10)
myobj_lowCov = methRead(cov.list,
sample.id = list("1","2","3","4","5","6","7","8"),
assembly="v081",
treatment = c(0,0,0,0,1,1,1,1),
pipeline = "bismarkCoverage",
context="CpG",
mincov = 3
)
library(tidyverse)
cdslist <- read.csv("../analyses/GCF_000297895_cdslist.tab", header = FALSE)
uniprot <- read.csv("../analyses/Cg-blastx-sp.tab.txt", header = FALSE, sep="\t") %>%
distinct(V1, .keep_all = TRUE)
spurLOC <- read.csv("../analyses/Spur-blastx-LOCsym.tab", header = TRUE, sep="\t")
dmel <- read.csv("../analyses/Cg-dmel-gene_blastn_02.tab", header = FALSE, sep="\t")  %>%
distinct(V1, .keep_all = TRUE)
celsym <- read.csv("../analyses/Cg_Ce-genesym.tab", header = FALSE, sep="\t")
comb <- left_join(cdslist, uniprot, by = "V1")  %>%
left_join(spurLOC, by = c("V1" ="V1.x")) %>%
left_join(dmel, by = "V1") %>%
left_join(celsym, by = c("V1" = "V2")) %>%
select(V1, V2.x, V3.x, V2.x.x, V11, V1.y, V3.y, V4.x, V2.y.y, V3.x.x,
V1.y.y, V3.y.y, V4.y) %>%
rename(cdsID = V1, uniprot = V2.x, u_ev = V3.x, spurAcc
= V2.x.x, s_ev = V11, spID02 = V1.y, sp_ecb = V3.y, sp_sym = V4.x, dmel = V2.y.y, dmel_ev = V3.x.x, cel_ID = V1.y.y, cel_ev = V3.y.y, cel_sym = V4.y)
comb <- left_join(cdslist, uniprot, by = "V1")  %>%
left_join(spurLOC, by = c("V1" ="V1.x")) %>%
left_join(dmel, by = "V1") %>%
left_join(celsym, by = c("V1" = "V2"))
View(comb)
View(uniprot)
View(spurLOC)
comb <- left_join(cdslist, uniprot, by = "V1")  %>%
left_join(spurLOC, by = c("V1" ="V1.x")) %>%
left_join(dmel, by = "V1") %>%
left_join(celsym, by = c("V1" = "V2")) %>%
select(V1, V2.x, V3.x, V2.x.x, V3.x.x, V1.y, V3.y, V4.x, V2.y.y, V3.y.y,
V1.y.y, V3, V4.y) %>%
rename(cdsID = V1, uniprot = V2.x, u_ev = V3.x, spurAcc
= V2.x.x, s_ev = V3.x.x, spID02 = V1.y, sp_ecb = V3.y, sp_sym = V4.x, dmel = V2.y.y, dmel_ev = V3.y.y, cel_ID = V1.y.y, cel_ev = V3, cel_sym = V4.y)
View(comb)
giles <- read.csv("../data/bestblast_/bestblast.tab", header = TRUE, sep = "\t") %>%
select(ID, HitAcc, HitDesc, E.Value)
comb_g <- left_join(comb, giles, by = c("cdsID" = "ID"))
loc <- read.csv("../data/bestblast_/LOC_seqID_key.tab", header = FALSE, sep = "\t")
loc_dt <- left_join(loc, comb_g, by = c("V1" = "cdsID"))
write_tsv(
loc_dt,
"../analyses/Cg-annot-join-V1.3.tab"
)
top <- read.csv("../data/topmarker_bla_mitov7_top10perCluster.txt", header = TRUE, sep = "\t")
annot <- read.csv("../analyses/Cg-annot-join-V1.3.tab", header = TRUE, sep = "\t")
top.annotv1.3 <- left_join(top, annot, by = c("gene_id" = "V2"))
write_tsv(
top.annotv1.3,
"../analyses/top.annotv1.3.tab"
)
top1.3 <- read.csv("../analyses/top.annotv1.3.tab", header = TRUE, sep="\t")
S3 <- read.csv("../data/fwddev191528revisedsupplementaryfile/Table S3_ Morula_Cluster16.txt", header = TRUE, sep="\t")
top1.3 <- read.csv("../analyses/top.annotv1.3.tab", header = TRUE, sep="\t")
S3_top1.3 <-left_join(S3, top1.3, by = c("Row.names" ="sp_sym"))
write_tsv(
S3_top1.3,
"../analyses/S3_top1.3.tsv"
)
S4 <- read.csv("../data/fwddev191528revisedsupplementaryfile/Table S4_ Morula_Cluster20.txt", header = TRUE, sep="\t")
S4_top1.3 <-left_join(S4, top1.3, by = c("Row.names" ="sp_sym"))
write_tsv(
S4_top1.3,
"../analyses/S4_top1.3.tsv"
)
S7mor <- read.csv("../data/fwddev191528revisedsupplementaryfile/Table S7_ Cluster 20 Markers_morula.txt", header = TRUE, sep="\t")
S7mor_top1.3 <- left_join(S7mor, top1.3, by = c("Row.names" ="sp_sym"))
write_tsv(
S7mor_top1.3,
"../analyses/S7mor_top1.3.tsv"
)
S7eb <- read.csv("../data/fwddev191528revisedsupplementaryfile/Table S7_ Cluster 20 Markers_early_blastula.txt", header = TRUE, sep="\t")
S7eb_top1.3 <- left_join(S7eb, top1.3, by = c("Row.names" ="sp_sym"))
write_tsv(
S7eb_top1.3,
"../analyses/S7eb_top1.3.tsv"
)
S7hb <- read.csv("../data/fwddev191528revisedsupplementaryfile/Table S7_ Cluster 20 Markers_hatched_blastula.txt", header = TRUE, sep="\t")
S7hb_top1.3 <- left_join(S7hb, top1.3, by = c("Row.names" ="sp_sym"))
write_tsv(
S7hb_top1.3,
"../analyses/S7hb_top1.3.tsv"
)
S7mb <- read.csv("../data/fwddev191528revisedsupplementaryfile/Table S7_ Cluster 20 Markers_mesenchyme_blastula.txt", header = TRUE, sep="\t")
S7mb_top1.3 <- left_join(S7mb, top1.3, by = c("Row.names" ="sp_sym"))
write_tsv(
S7mb_top1.3,
"../analyses/S7mb_top1.3.tsv"
)
S7eg <- read.csv("../data/fwddev191528revisedsupplementaryfile/Table S7_ Cluster 20 Markers_early_gastrula.txt", header = TRUE, sep="\t")
S7eg_top1.3 <- left_join(S7eg, top1.3, by = c("Row.names" ="sp_sym"))
write_tsv(
S7eg_top1.3,
"../analyses/S7eg_top1.3.tsv"
)
S7lg <- read.csv("../data/fwddev191528revisedsupplementaryfile/Table S7_ Cluster 20 Markers_Late_gastrula.txt", header = TRUE, sep="\t")
S7lg_top1.3 <- left_join(S7lg, top1.3, by = c("Row.names" ="sp_sym"))
write_tsv(
S7lg_top1.3,
"../analyses/S7lg_top1.3.tsv"
)
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("~/R/x86_64-pc-linux-gnu-library/4.0/rmarkdown_2.8.tar.gz", repos = NULL, type = "source")
knitr::opts_chunk$set(echo = TRUE)
sbr.list=list(../analyses/1_ATCACG_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
sbr.list=list('../analyses/1_ATCACG_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'../analyses/2_CGATGT_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'../analyses/3_TTAGGC_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'../analyses/4_TGACCA_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'../analyses/5_ACAGTG_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'../analyses/6_GCCAAT_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'../analyses/7_CAGATC_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam',
'../analyses/data/8_ACTTGA_L001_R1_001_trimmed_bismark_bt2.deduplicated.sorted.bam'
)
library(methylKit)
install.packages("methylKit")
source("http://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
a
BiocManager::install(c("methylkit"))
library(methylKit)
BiocManager::install(c("methylKit"))
library(methylKit)
library(methylKit)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
BiocManager::install(c("methylKit"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
BiocManager::install(c("methylKit"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
BiocManager::install(c("methylKit"))
library(methylKit)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.12")
BiocManager::install(c("methylKit"))
install.packages("tidyverse")
library(methylKit)
knitr::opts_chunk$set(echo = TRUE)
install.packages("Rsamtools")
BiocManager::install(c("Rsamtools"))
BiocManager::install(c("Rhtslib"))
library(tidyverse)
install.packages(tidyverse)
library(dplyr)
install.packages(dplyr)
install.packages("tidyverse")
libary(tidyverse)
library(tidyverse)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt")
head(blast)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t")
head(blast)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t", "|")
head(blast)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t" "|")
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t")
head(blast)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t")
head(blast)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t", sep="|")
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t")
head(blast)
up <- read.csv("../data/uniprot-reviewed-20210901.tab", header = TRUE, sep="\t")
head(up)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t") %>%
separate(data = blast, col = V2, into = c("sp", "Accession_ID", "Gene"), sep = "\\|")
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t")
blast_sep <- separate(data = blast, col = V2, into = c("sp", "Accession_ID", "Gene"), sep = "\\|")
head(blast_sep)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t") %>%
separate(col = V2, into = c("sp", "Accession_ID", "Gene"), sep = "\\|")
#blast_sep <- separate(data = blast, col = V2, into = c("sp", "Accession_ID", "Gene"), sep = "\\|")
head(blast_sep)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t") %>%
separate(col = V2, into = c("sp", "Accession_ID", "Gene"), sep = "\\|")
#blast <- separate(data = blast, col = V2, into = c("sp", "Accession_ID", "Gene"), sep = "\\|")
head(blast)
up <- read.csv("../data/uniprot-reviewed-20210901.tab", header = TRUE, sep="\t")
head(up)
blast <- read.csv("../data/cbai_transcriptome_v3.1.blastx.outfmt6.txt", header = FALSE, sep="\t") %>%
separate(col = V2, into = c("sp", "Accession_ID", "Gene"), sep = "\\|")
head(blast)
comb <- left_join(blast, up, by =c("Accession_ID" = "Entry") )
View(comb)
library(stringr)
immune <- filter(str_detect(comb, Gene.Ontology..biological.process. "immune"))
comb %>% filter(str_detect(Gene.Ontology..biological.process., "immune"))
comb %>% filter(str_detect(Gene.ontology..biological.process., "immune"))
library(methylKit)
